# sampling array omitted

probe process("cmp").begin {
    # sampling array initialization omitted

    printf("cmp")
}

probe process("cmp").function("_Z10BubbleSortPii").call? {
    printf("0 %s_Z10BubbleSortPii\n", thread_indent(1))
}
probe process("cmp").function("_Z10BubbleSortPii").return? {
    printf("1 %s\n", thread_indent(-1))
}

probe process("cmp").function("_Z10InsertSortPii").call? {
    printf("0 %s_Z10InsertSortPii\n", thread_indent(1))
}
probe process("cmp").function("_Z10InsertSortPii").return? {
    printf("1 %s\n", thread_indent(-1))
}

probe process("cmp").function("_Z12BadPartitionPiii").call? {
    printf("0 %s_Z12BadPartitionPiii\n", thread_indent(1))
}
probe process("cmp").function("_Z12BadPartitionPiii").return? {
    printf("1 %s\n", thread_indent(-1))
}

probe process("cmp").function("_Z12QuickSortBadPii").call? {
    printf("0 %s_Z12QuickSortBadPii\n", thread_indent(1))
}
probe process("cmp").function("_Z12QuickSortBadPii").return? {
    printf("1 %s\n", thread_indent(-1))
}

probe process("cmp").function("_Z4SwapRiS_").call? {
    printf("0 %s_Z4SwapRiS_\n", thread_indent(1))
}
probe process("cmp").function("_Z4SwapRiS_").return? {
    printf("1 %s\n", thread_indent(-1))
}

probe process("cmp").function("_Z4swapPiii").call? {
    printf("0 %s_Z4swapPiii\n", thread_indent(1))
}
probe process("cmp").function("_Z4swapPiii").return? {
    printf("1 %s\n", thread_indent(-1))
}

probe process("cmp").function("_Z8HeapSortPii").call? {
    printf("0 %s_Z8HeapSortPii\n", thread_indent(1))
}
probe process("cmp").function("_Z8HeapSortPii").return? {
    printf("1 %s\n", thread_indent(-1))
}

probe process("cmp").function("_Z9PartitionPiii").call? {
    printf("0 %s_Z9PartitionPiii\n", thread_indent(1))
}
probe process("cmp").function("_Z9PartitionPiii").return? {
    printf("1 %s\n", thread_indent(-1))
}

probe process("cmp").function("_Z9QuickSortPii").call? {
    printf("0 %s_Z9QuickSortPii\n", thread_indent(1))
}
probe process("cmp").function("_Z9QuickSortPii").return? {
    printf("1 %s\n", thread_indent(-1))
}

probe process("cmp").function("_Z9repairTopPiii").call? {
    printf("0 %s_Z9repairTopPiii\n", thread_indent(1))
}
probe process("cmp").function("_Z9repairTopPiii").return? {
    printf("1 %s\n", thread_indent(-1))
}

probe process("cmp").function("main").call? {
    printf("0 %smain\n", thread_indent(1))
}
probe process("cmp").function("main").return? {
    printf("1 %s\n", thread_indent(-1))
}

probe process("cmp").end {
    printf("cmp")
}
