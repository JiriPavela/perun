global sample_array[2]

probe process("cmp").begin {
    sample_array[0] = 1
    sample_array[1] = 3

    printf("cmp")
}

probe process("cmp").function("main").call? {
    sample_array[0] ++
    if (sample_array[0] == 2) {
        printf("0 %smain\n", thread_indent(1))
        sample_array[0] = 0
    }
}
probe process("cmp").function("main").return? {
    if (sample_array[0] == 0) {
        printf("1 %s\n", thread_indent(-1))
    }
}

probe process("cmp").function("test").call? {
    printf("0 %stest\n", thread_indent(1))
}
probe process("cmp").function("test").return? {
    printf("1 %s\n", thread_indent(-1))
}

probe process("cmp").mark("BEFORE_CYCLE")? {
    printf("3 %s BEFORE_CYCLE\n", thread_indent(0))
}

probe process("cmp").mark("BEFORE_CYCLE_end")? {
    printf("4 %s BEFORE_CYCLE_end\n", thread_indent(0))
}

probe process("cmp").mark("TEST_SINGLE")? {
    sample_array[1] ++
    if (sample_array[1] == 4) {
        printf("2 %s TEST_SINGLE\n", thread_indent(0))
        sample_array[1] = 0
    }
}

probe process("cmp").mark("TEST_SINGLE2")? {
    printf("2 %s TEST_SINGLE2\n", thread_indent(0))
}

probe process("cmp").end {
    printf("cmp")
}
